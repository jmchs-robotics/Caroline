// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package org.usfirst.frc5933.Caroline.subsystems;

import org.usfirst.frc5933.Caroline.RobotMap;
import org.usfirst.frc5933.Caroline.commands.*;
import edu.wpi.first.wpilibj.DigitalInput;

import edu.wpi.first.wpilibj.command.Subsystem;

/**
 *
 */
public class RoboRioSystem extends Subsystem {

	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	private final DigitalInput dIP1 = RobotMap.roboRioSystemDIP1;
	private final DigitalInput dIP2 = RobotMap.roboRioSystemDIP2;
	private final DigitalInput dIP3 = RobotMap.roboRioSystemDIP3;
	private final DigitalInput dIP4 = RobotMap.roboRioSystemDIP4;

	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

	// Put methods for controlling this subsystem
	// here. Call these from Commands.

	public void initDefaultCommand() {
		// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

		// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

		// Set the default command for a subsystem here.
		// setDefaultCommand(new MySpecialCommand());
	}

	public void robotInit() {

	}

	public void teleopInit() {

	}

	public void autonomousInit() {

	}

	public void teleopPeriodic() {

	}

	public void autonomousPeriodic() {

	}

	public int getDIP() {
		int bit_field = 0;
		if (RobotMap.roboRioSystemDIP1.get()) {
			bit_field |= 0x01;
		}

		if (RobotMap.roboRioSystemDIP2.get()) {
			bit_field |= 0x02;
		}
		
		if (RobotMap.roboRioSystemDIP3.get()) {
			bit_field |= 0x04;
		}

		if (RobotMap.roboRioSystemDIP4.get()) {
			bit_field |= 0x08;
		}

		return bit_field;
	}
}
